---
import BaseLayout from "@layouts/BaseLayout.astro";
import PluginIntroduce from "@components/plugin/PluginIntroduce.astro";
import PluginHub from "@components/plugin/PluginHub/index";
import CloudFooter from "@components/common/Footer.astro";
import { useTranslations } from "@i18n/util";
import { isChinese } from "@i18n/util";
const ifzh = isChinese(Astro);
import { getCollection } from "astro:content";
import { generateHydrateScript } from "astro/runtime/server/hydration.js";

const Functionality = {
  ai: "AI",
  authentication: "认证",
  transformation: "转换",
  traffic: "流量",
  security: "安全",
};

const lang = ifzh ? "zh-cn" : "en"

// 拿到插件的文档
const posts = await getCollection("docs", (item) => {
  return item.slug.includes(`latest/${lang}/plugin`);
});

const generateLink = (slug) => {
  const arr = slug.split("/" + lang);
  return (lang ==='en' ? "/en" : "") + "/docs/" + arr.join("") + "/";
}

const dataSource = posts
  .map((item) => ({
    Img: "",
    Title: item.data.title,
    Tiers: "企业版",
    Des: item.data.description,
    Link: generateLink(item.slug),
    Functionality:
      Functionality[
        item.id.match(/plugins\/(.*?)\/[^\/]+\.md$/)
          ? item.id.match(/plugins\/(.*?)\/[^\/]+\.md$/)[1]
          : ""
      ],
    SupportedBy: "",
  }))
  .filter((item) => item.Functionality);
---

<BaseLayout title="plugin" description="plugin.description">
  <PluginIntroduce />
  <PluginHub client:load dataSource={dataSource} />
  <CloudFooter />
</BaseLayout>
